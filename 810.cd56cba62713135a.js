"use strict";(self.webpackChunkdocs_app_ng=self.webpackChunkdocs_app_ng||[]).push([[810],{8810:(C,u,m)=>{m.r(u),m.d(u,{PlayHammerFeatureModule:()=>Z});var s=m(9808),h=m(4794),c=m(6226),t=m(5e3),l=m(1777);class p{constructor(){this.gestureIndicators=[]}hide(r){const e=this;setTimeout(()=>{r&&(r.state="hidden",setTimeout(()=>{if(r)for(let i=0;i<e.gestureIndicators.length;i++){const a=e.gestureIndicators[i];if(a.x===r.x&&a.y===r.y){e.gestureIndicators.splice(i,1);break}}},250))},500)}display(r,e,i){if(r>0&&e>0){const a={x:r,y:e,size:i,state:"hidden"};return this.gestureIndicators.push(a),setTimeout(()=>{a.state="visible"},100),a}return null}}const d=[(0,l.X$)("indicatorState",[(0,l.SB)("hidden",(0,l.oB)({transform:"scale(0, 0)"})),(0,l.SB)("visible",(0,l.oB)({transform:"scale(1, 1)"})),(0,l.eR)("hidden => visible",(0,l.jt)("150ms ease-in")),(0,l.eR)("visible => hidden",(0,l.jt)("150ms ease-out"))])];function g(n,r){if(1&n&&t._UZ(0,"div",3),2&n){const e=r.$implicit;t.Udp("top",e.y-e.size/2,"px")("left",e.x-e.size/2,"px")("width",e.size,"px")("height",e.size,"px")("transform",e.transform),t.Q6J("@indicatorState",e.state)}}let f=(()=>{class n{constructor(e){this.util=e,this.eventText=""}ngOnInit(){this.indicators=new p}onPan(e){this.eventText+=`(${e.center.x}, ${e.center.y})<br/>`;const i=this.indicators.display(e.center.x,e.center.y,50);this.indicators.hide(i)}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-pan-element"]],decls:5,vars:2,consts:[[1,"gesture__zone",3,"pan"],[3,"innerHTML"],["class","gesture__indicator",3,"top","left","width","height","transform",4,"ngFor","ngForOf"],[1,"gesture__indicator"]],template:function(e,i){1&e&&(t.TgZ(0,"div",0),t.NdJ("pan",function(o){return i.onPan(o)}),t.TgZ(1,"h1"),t._uU(2,"Pan Gesture"),t.qZA(),t._UZ(3,"p",1),t.qZA(),t.YNc(4,g,1,11,"div",2)),2&e&&(t.xp6(3),t.Q6J("innerHTML",i.eventText,t.oJD),t.xp6(1),t.Q6J("ngForOf",i.indicators.gestureIndicators))},directives:[s.sg],styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#ff61f7;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"],data:{animation:[d]}}),n})();function y(n,r){if(1&n&&t._UZ(0,"div",3),2&n){const e=r.$implicit;t.Udp("top",e.y-e.size/2,"px")("left",e.x-e.size/2,"px")("width",e.size,"px")("height",e.size,"px")("transform",e.transform),t.Q6J("@indicatorState",e.state)}}let _=(()=>{class n{constructor(e){this.util=e,this.eventText=""}ngOnInit(){this.indicators=new p}onPress(e){const i=this.indicators.display(e.center.x,e.center.y,50);i.interval=setInterval(()=>{i.size+=1},10),this.eventText+=`(${e.center.x}, ${e.center.y})<br/>`}onPressUp(e){const i=this.indicators.gestureIndicators[0];i&&(clearInterval(i.interval),this.indicators.hide(i))}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-press-element"]],decls:5,vars:2,consts:[[1,"gesture__zone",3,"press","pressUp"],[3,"innerHTML"],["class","gesture__indicator",3,"top","left","width","height","transform",4,"ngFor","ngForOf"],[1,"gesture__indicator"]],template:function(e,i){1&e&&(t.TgZ(0,"div",0),t.NdJ("press",function(o){return i.onPress(o)})("pressUp",function(o){return i.onPressUp(o)}),t.TgZ(1,"h1"),t._uU(2,"Press Gesture"),t.qZA(),t._UZ(3,"p",1),t.qZA(),t.YNc(4,y,1,11,"div",2)),2&e&&(t.xp6(3),t.Q6J("innerHTML",i.eventText,t.oJD),t.xp6(1),t.Q6J("ngForOf",i.indicators.gestureIndicators))},directives:[s.sg],styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#f44;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"],data:{animation:[d]}}),n})();function w(n,r){if(1&n&&t._UZ(0,"div",3),2&n){const e=r.$implicit;t.Udp("top",e.y-e.size/2,"px")("left",e.x-e.size/2,"px")("width",e.size,"px")("height",e.size,"px")("transform",e.transform),t.Q6J("@indicatorState",e.state)}}let x=(()=>{class n{constructor(e){this.util=e,this.eventText=""}ngOnInit(){this.indicators=new p}onRotate(e){this.eventText+=`rotate ${e.angle}&deg; about (${e.center.x}, ${e.center.y})<br/>`}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-rotate-element"]],decls:5,vars:2,consts:[[1,"gesture__zone",3,"rotate"],[3,"innerHTML"],["class","gesture__indicator",3,"top","left","width","height","transform",4,"ngFor","ngForOf"],[1,"gesture__indicator"]],template:function(e,i){1&e&&(t.TgZ(0,"div",0),t.NdJ("rotate",function(o){return i.onRotate(o)}),t.TgZ(1,"h1"),t._uU(2,"Rotate Gesture"),t.qZA(),t._UZ(3,"p",1),t.qZA(),t.YNc(4,w,1,11,"div",2)),2&e&&(t.xp6(3),t.Q6J("innerHTML",i.eventText,t.oJD),t.xp6(1),t.Q6J("ngForOf",i.indicators.gestureIndicators))},directives:[s.sg],styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#bfff00;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"],data:{animation:[d]}}),n})(),P=(()=>{class n{constructor(e){this.util=e,this.eventText=""}onSwipe(e){const i=Math.abs(e.deltaX)>40?e.deltaX>0?"right":"left":"",a=Math.abs(e.deltaY)>40?e.deltaY>0?"down":"up":"";this.eventText+=`${i} ${a}<br/>`}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-swipe-element"]],decls:4,vars:1,consts:[[1,"gesture__zone",3,"swipe"],[3,"innerHTML"]],template:function(e,i){1&e&&(t.TgZ(0,"div",0),t.NdJ("swipe",function(o){return i.onSwipe(o)}),t.TgZ(1,"h1"),t._uU(2,"Swipe Gesture"),t.qZA(),t._UZ(3,"p",1),t.qZA()),2&e&&(t.xp6(3),t.Q6J("innerHTML",i.eventText,t.oJD))},styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#5dccff;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"]}),n})();function v(n,r){if(1&n&&t._UZ(0,"div",3),2&n){const e=r.$implicit;t.Udp("top",e.y-e.size/2,"px")("left",e.x-e.size/2,"px")("width",e.size,"px")("height",e.size,"px")("transform",e.transform),t.Q6J("@indicatorState",e.state)}}let b=(()=>{class n{constructor(e){this.util=e,this.eventText=""}ngOnInit(){this.indicators=new p}onTap(e){this.eventText+=`(${e.center.x}, ${e.center.y})<br/>`;const i=this.indicators.display(e.center.x,e.center.y,50);this.indicators.hide(i)}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-tap-element"]],decls:5,vars:2,consts:[[1,"gesture__zone",3,"tap"],[3,"innerHTML"],["class","gesture__indicator",3,"top","left","width","height","transform",4,"ngFor","ngForOf"],[1,"gesture__indicator"]],template:function(e,i){1&e&&(t.TgZ(0,"div",0),t.NdJ("tap",function(o){return i.onTap(o)}),t.TgZ(1,"h1"),t._uU(2,"Tap Gesture"),t.qZA(),t._UZ(3,"p",1),t.qZA(),t.YNc(4,v,1,11,"div",2)),2&e&&(t.xp6(3),t.Q6J("innerHTML",i.eventText,t.oJD),t.xp6(1),t.Q6J("ngForOf",i.indicators.gestureIndicators))},directives:[s.sg],styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#ffd13b;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"],data:{animation:[d]}}),n})(),T=(()=>{class n{constructor(e){this.util=e}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(c.fx))},n.\u0275cmp=t.Xpm({type:n,selectors:[["play-hammer-feature"]],decls:7,vars:0,template:function(e,i){1&e&&(t._UZ(0,"play-hammer-pan-element"),t._UZ(1,"play-hammer-press-element"),t._UZ(2,"play-hammer-rotate-element"),t._UZ(3,"play-hammer-swipe-element"),t._UZ(4,"play-hammer-tap-element"),t.TgZ(5,"textarea"),t._uU(6,"Background\nIf you are working on a mobile project that requires gestures, hammerjs has the gestures to get you started. Out of the box, hammerjs includes pan,pinch, press, rotate, swipe, and tap gesture recognition. Each of these gesture recognizers may be wired up to any element within the DOM in order to detect the specific gesture and allow you to handle it.\n\nHammerjs relies on pointer events (pointermove, pointerup, pointerdown, and pointercancel) to perform all of its gestures. If Internet Explorer is being used, MSPointer events are used instead of the standard pointer events.\n\n@angular/platform-browser handles the binding of the hammerjs gestures automatically within the HammerGestureConfig addEventListener method. This call will initialize hammerjs outside of angular and perform the necessary checks to determine if hammerjs is loaded within the angular application.\n\nGetting started with hammerjs\nhammerjs can easily be installed via npm by executing the following command within your angular project:\n\n<>\nnpm install hammerjs\nNext, you will need to add import 'hammerjs'; to your main.ts file. If you forget to add the import statement to your main.ts file you will see an error within the console that will stop your application from running.\n\n<>\nError: Hammer.js is not loaded, can not bind to x event\nDifficulties in hammerjs\nCurrently, in version 5.2.0, an exception is thrown, when you forget to include hammerjs, that stops the remainder of your angular project to load. @angular/platform-browser@6.0.0 changes the thrown exception over to a console.warn, so that the remainder of the project continues to load without gestures.\n\nThe original issue can be tracked within the github issue tracker.\n\nhammerjs Gestures\n@angular/platform-browser includes a set of events to attach to DOM elements.\n\nThe following events are included, but the up to date list can be found on github:\n\npan\npanstart\npanmove\npanend\npancancel\npanleft\npanright\npanup\npandown\npinch\npinchstart\npinchmove\npinchend\npinchcancel\npinchin\npinchout\npress\npressup\nrotate\nrotatestart\nrotatemove\nrotateend\nrotatecancel\nswipe\nswipeleft\nswiperight\nswipeup\nswipedown\ntap\n\nGesture Recognizers\nPan : A Pan gesture is recognized when a pointer is down and moved within a set direction. The pan gesture is commonly used when scrolling through a set of items.\nPinch : A Pinch gesture is recognized when two or more pointers are moving toward or away from each other. The pinch gesture is commonly used for zooming in or out.\nPress : A Press gesture is recognized when the pointer is being held down for a set amount of time. This is commonly used for long presses.\nRotate : A Rotate gesture is recognized when a set amount of pointers, minimum of 2, are moving in a circular motion. This is commonly used to rotate items.\nSwipe : A Swipe gesture is recognized when a pointer is moving at a set speed for a set minimum amount of distance. This is commonly used to flip between items within a UI. Instead of scrolling, it is more useful to swap out items in a set direction.\nTap : A Tap gesture is recognized when a user taps the screen. This is commonly used for button presses.\nSwipe vs Pan\nSwipe and Pan can almost be used interchangeably, but the main difference is that a pan event will fire off as the panning occurs, whereas the swipe event only fires off at the end of the swipe. The pan is more useful for smoothly scrolling an item as you have your cursor down, but a swipe is more useful for scrolling an item after the swipe occurs.\n\nhammerjs without @angular/platform-browser\nLink to this section\nWithout @angular/platform-browser, you will be required to create your own custom directives to add gesture support to your application.\n\nAt a bare minimum you need to bind to the window\u2019s hammerjs manager and bind to the on tap event that is provided by hammerjs.\n\n<>\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\ninterface HammerManager {\n  new (element: HTMLElement | SVGElement, options?: any): HammerManager;\n  destroy(): void;\n  add(recognizer: Recognizer): void;\n  on(eventName: string, callback: Function): void;\n}\n\ninterface Recognizer {\n  new (options?: any): Recognizer;\n  recognizeWith(otherRecognizer: Recognizer | string): Recognizer;\n}\n\n@Directive({\n  selector: '[customTapGesture]',\n})\nexport class TapGestureDirective implements OnInit, OnDestroy {\n  constructor(private elementRef: ElementRef, private zone: NgZone) {}\n\n  /**\n   * Return the hammerjs library if it's available\n   */\n  private get hammerLib() {\n    return typeof window !== 'undefined' ? (window as any).Hammer : undefined;\n  }\n\n  private manager?: HammerManager;\n\n  /**\n   * Event fired when the element is tapped\n   */\n  @Output() cTap = new EventEmitter<any>();\n\n  /**\n   * Binds HammerJS Instances\n   */\n  ngOnInit() {\n    if (this.hammerLib) {\n      this.manager = this.bindHammer();\n    }\n  }\n\n  /**\n   * Unbinds HammerJS Instances\n   */\n  ngOnDestroy() {\n    if (this.manager) {\n      this.manager.destroy();\n    }\n  }\n\n  protected bindHammer(): HammerManager {\n    return this.zone.run(_ => {\n      const hostElement = this.elementRef.nativeElement;\n      const manager = new this.hammerLib.Manager(hostElement, {\n        touchAction: 'tap',\n      });\n\n      manager.add(new this.hammerLib.Tap({}));\n\n      manager.on('tap', (ev: any) => {\n        this.cTap.emit(ev);\n        ev.preventDefault();\n      });\n\n      return manager;\n    });\n  }\n}\n"),t.qZA())},directives:[f,_,x,P,b],styles:[".gesture__zone[_ngcontent-%COMP%]{background-color:#00d0ff;padding:20px;margin:10px;border-radius:3px;height:500px;text-align:center;overflow:auto}h1[_ngcontent-%COMP%], p[_ngcontent-%COMP%], .gesture__indicator[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none}.gesture__indicator[_ngcontent-%COMP%]{position:fixed;top:0;left:0;height:50px;width:50px;display:block;border-radius:50%;text-align:center;line-height:45px;z-index:10;background-color:#42a5f5}"]}),n})(),H=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({providers:[],imports:[[s.ez]]}),n})(),M=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({providers:[],imports:[[s.ez]]}),n})(),z=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({providers:[],imports:[[s.ez]]}),n})(),E=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({providers:[],imports:[[s.ez]]}),n})(),O=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({providers:[],imports:[[s.ez]]}),n})(),Z=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=t.oAB({type:n}),n.\u0275inj=t.cJS({imports:[[s.ez,h.Bz.forChild([{path:"",component:T,data:{CommonRouterService:{routes:[".."],seo:{title:"Play hammer",keywords:"play hammer",description:"play hammer"}}}}]),H,M,z,E,O]]}),n})()}}]);